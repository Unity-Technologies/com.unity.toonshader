{% metadata_file .yamato/UnityToonShader.metafile %}

#
#
#

osx_test_projects:
  - project_prefix: HdrpGraphicsTest
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: LegacyGraphicsTest
    unity_editors:
      - version: 2022.3
  - project_prefix: UniversalGraphicsTest
    unity_editors:
      - version: 6000.0
  - project_prefix: UniversalGraphicsTestECS
    unity_editors:
      - version: 2022.3
      - version: 6000.0


win_test_projects:
  - project_prefix: LegacyStereoGraphicsTest
    utr_arguments: --extra-editor-arg="-force-d3d11"
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: HdrpGraphicsTest
    utr_arguments: --extra-editor-arg="-force-d3d11"
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: HdrpGraphicsTest
    key_postfix: _Vulkan
    utr_arguments: 
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: HdrpStereoGraphicsTest
    utr_arguments: --extra-editor-arg="-force-d3d11"
    unity_editors:
      - version: 2022.3
  - project_prefix: LegacyGraphicsTest
    utr_arguments: --extra-editor-arg="-force-d3d11"
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: LegacyGraphicsTest 
    key_postfix: _Vulkan
    utr_arguments: 
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: UniversalGraphicsTest
    utr_arguments: --extra-editor-arg="-force-d3d11"
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: UniversalGraphicsTest
    key_postfix: _Vulkan
    utr_arguments: 
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: UniversalGraphicsTestECS
    utr_arguments: --extra-editor-arg="-force-d3d11"
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: UniversalGraphicsTestECS
    key_postfix: _Vulkan
    utr_arguments: 
    unity_editors:
      - version: 2022.3
      - version: 6000.0
  - project_prefix: UniversalStereoGraphicsTest
    utr_arguments: --extra-editor-arg="-force-d3d11"
    unity_editors:
      - version: 6000.0
  - project_prefix: HdrpDX12GraphicsTest
    utr_arguments:
    unity_editors:
      - version: 6000.0

  
---

# OSX Metal
{% for test_project in osx_test_projects %}
{% for unity_editor in test_project.unity_editors %}

{% assign project_name = test_project.project_prefix | append: '-' | concat: unity_editor.version %}

{{ project_name }}_OSX_Metal_playmode_mono_Linear:
    name: {{ project_name }} on OSX_Metal_playmode_mono_Linear 
    agent:
        type: {{ metal_platform.type }}
        model: {{ metal_platform.model }}
        image: {{ metal_platform.image }}
        flavor: {{ metal_platform.flavor }}
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        UTR_VERSION: current
    commands:
      - command:  curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output TestProjects/{{ project_name }}/utr
      -  chmod +x TestProjects/{{ project_name }}/utr
      -  command: ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install --upgrade pip'"
      -  command: ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple'"
      -  command: rsync -aq -e 'ssh -i ~/.ssh/id_rsa_macmini' --append --timeout=30 $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
         retries: 2
      -  command: scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP '$(python3 -m site --user-base)/bin/unity-downloader-cli -u {{ unity_editor.version }} -c editor -c il2cpp  --wait --published-only'
         retries: 2
      -  command: |5-

                 ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; echo \$UPM_REGISTRY; cd ~/com.unity.toonshader/TestProjects/{{ project_name }} && ~/com.unity.toonshader/TestProjects/{{ project_name }}/utr --artifacts_path=/Users/bokken/com.unity.toonshader/TestProjects/{{ project_name }}/test-results --editor-location=/Users/bokken/.Editor --extra-editor-arg="-colorspace=Linear" --reruncount=2 --scripting-backend=Mono2x --suite=playmode --testproject=/Users/bokken/com.unity.toonshader/TestProjects/{{ project_name }}"
                 UTR_RESULT=$? 
                 mkdir -p TestProjects/{{ project_name }}/test-results/
                 scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/com.unity.toonshader/TestProjects/{{ project_name }}/test-results/ TestProjects/{{ project_name }}/test-results/
                 exit $UTR_RESULT
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/{{ project_name }}/Logs/*.log"
{% endfor %}
{% endfor %}


# Windows
{% for test_project in win_test_projects %}
{% for unity_editor in test_project.unity_editors %}

{% assign project_name = test_project.project_prefix | append: '-' | concat: unity_editor.version %}

{{ project_name }}{{ test_project.key_postfix}}_Win_playmode:
    name: {{ project_name }}{{ test_project.key_postfix}} on Win_playmode
    agent:
        type: {{win_test_platform.type}}
        image: {{win_test_platform.image}}
        model: {{win_test_platform.model}}
        flavor: {{win_test_platform.flavor}}
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        UTR_VERSION: current
    commands:
      -  curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output TestProjects/{{ project_name }}/utr.bat
      -  choco install unity-downloader-cli -y -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  rmdir /s /q "TestProjects/{{ project_name }}"
      -  git config --local core.symlinks true
      -  git config --global core.symlinks true
      -  git checkout -f 
      -  cd TestProjects/{{ project_name }} && unity-downloader-cli -u {{ unity_editor.version }} -c editor -c il2cpp  --wait --published-only
      
#      -  cd TestProjects/{{ project_name }} && utr --scripting-backend=Mono2x --suite=playmode --suite=playmode --testproject=. --editor-location=.Editor --artifacts_path=test-results {{ test_project.utr_arguments }} --zero-tests-are-ok=1
      -  cd TestProjects/{{ project_name }} && utr --suite=playmode --testproject=. --editor-location=.Editor --artifacts_path=test-results {{ test_project.utr_arguments }}
    timeout: 360000
    retries: 1
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
{% endfor %}
{% endfor %}

test_trigger:
  name: Tests Trigger (Virtual) for {{ yamato_name }}
  triggers:
    expression: | 
        NOT push.branch eq "development/v1" 
    recurring:
      - branch: dev
        frequency: daily
        rerun: on_new_revision
        
  dependencies:
    {% for test_project in osx_test_projects %}
    {% for unity_editor in test_project.unity_editors %}
    {% assign project_name = test_project.project_prefix | append: '-' | concat: unity_editor.version %}
    - .yamato/{{ yamato_name }}-test.yml#{{ project_name }}_OSX_Metal_playmode_mono_Linear
    {% endfor %}
    {% endfor %}
    {% for test_project in win_test_projects %}
    {% for unity_editor in test_project.unity_editors %}
    {% assign project_name = test_project.project_prefix | append: '-' | concat: unity_editor.version %}
    - .yamato/{{ yamato_name }}-test.yml#{{ project_name }}{{ test_project.key_postfix}}_Win_playmode
    {% endfor %}
    {% endfor %}
